{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","item","to","DialogsStyle","activeClassName","active","alt","item__img","src","item__name","name","Message","isMine","message__mymsg","message","message__item","text","message__name","from","maxLenghtValidator","maxLenght","Textarea","FormCreator","MessagesReduxForm","reduxForm","form","styles","inputForm","onSubmit","handleSubmit","Field","component","validate","required","Dialogs","dialogElements","dialogsPage","dialogs","map","messagesElements","messages","wrapper","dialogItems","messageItems","data","addMessage","messageText","mapStateToProps","state","isAuth","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,KAAO,sBAAsB,UAAY,2BAA2B,WAAa,4BAA4B,aAAe,8BAA8B,QAAU,yBAAyB,eAAiB,gCAAgC,cAAgB,+BAA+B,cAAgB,+BAA+B,WAAa,4BAA4B,YAAc,6BAA6B,WAAa,4BAA4B,OAAS,wBAAwB,UAAY,6B,6FCmBvkBC,EAhBI,SAAbA,EAAcC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACI,qBAAKC,UAAWJ,EAAWK,KAA3B,SACI,eAAC,IAAD,CACIC,GAAIJ,EACJE,UAAWG,IAAaF,KACxBG,gBAAiBD,IAAaE,OAHlC,UAKI,qBAAKC,IAAI,OAAON,UAAWG,IAAaI,UAAWC,IAAI,MACvD,sBAAMR,UAAWG,IAAaM,WAA9B,SAA2CZ,EAAMa,aCElDC,EAbC,SAACd,GACb,OAAGA,EAAMe,OACL,qBAAKZ,UAAWG,IAAaU,eAAiB,IAAMV,IAAaW,QAAjE,SACI,sBAAMd,UAAWG,IAAaY,cAA9B,SAA8ClB,EAAMmB,SAGxD,sBAAKhB,UAAWG,IAAaW,QAAU,IAAMX,IAAaY,cAA1D,UACQ,sBAAMf,UAAWG,IAAac,cAA9B,SAA8CpB,EAAMqB,OACpD,+BAAOrB,EAAMmB,W,kCCHvBG,EAAqBC,YAAU,KAC/BC,EAAWC,YAAY,YAmBvBC,EAAoBC,YAAU,CAAEC,KAAM,YAAlBD,EAjBL,SAAC3B,GAClB,OACI,uBAAMG,UAAW0B,IAAOC,UAAWC,SAAU/B,EAAMgC,aAAnD,UACI,8BACI,cAACC,EAAA,EAAD,CACIC,UAAWV,EACXX,KAAM,cACNsB,SAAU,CAACC,IAAUd,OAG7B,8BACI,kDAoCDe,EA5BC,SAACrC,GACb,IAAIsC,EAAiBtC,EAAMuC,YAAYC,QAAQC,KAAI,SAACrC,GAAD,OAC/C,cAAC,EAAD,CAAYS,KAAMT,EAAKS,KAAMX,GAAIE,EAAKF,IAASE,EAAKF,OAGpDwC,EAAmB1C,EAAMuC,YAAYI,SAASF,KAAI,SAACrC,GAAD,OAClD,cAAC,EAAD,CACIiB,KAAMjB,EAAKiB,KACXN,OAAQX,EAAKW,OACbI,KAAMf,EAAKe,MACNf,EAAKF,OAQlB,OACI,sBAAKC,UAAW0B,IAAOe,QAAvB,UACI,qBAAKzC,UAAW0B,IAAOgB,YAAvB,SAAqCP,IAErC,qBAAKnC,UAAW0B,IAAOiB,aAAvB,SAAsCJ,IACtC,cAAChB,EAAD,CAAmBK,SATV,SAACgB,GACd/C,EAAMgD,WAAWD,EAAKE,oB,uECzC1BC,EAAkB,SAACC,GAAD,MAAY,CAC9BC,OAAQD,EAAME,KAAKD,SCQRE,sBACXC,aARkB,SAACJ,GACnB,MAAO,CACHZ,YAAaY,EAAMZ,YACnBa,OAAQD,EAAME,KAAKD,UAKE,CACrBJ,kBDPwB,SAACQ,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK1D,MAAMoD,OACT,cAACI,EAAD,eAAeE,KAAK1D,QADI,cAAC,IAAD,CAAUK,GAAI,eAHV,GACXsD,IAAMH,WAStC,OAHiCD,YAAQL,EAARK,CAC7BE,KCHOH,CAKbjB","file":"static/js/3.78962ee1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Dialogs_wrapper__34EvC\",\"dialogItems\":\"Dialogs_dialogItems__1H3Pn\",\"item\":\"Dialogs_item__KtUlt\",\"item__img\":\"Dialogs_item__img__3VvFL\",\"item__name\":\"Dialogs_item__name__1MoZ3\",\"messageItems\":\"Dialogs_messageItems__3GVEs\",\"message\":\"Dialogs_message__31TJZ\",\"message__mymsg\":\"Dialogs_message__mymsg__2r5Ln\",\"message__item\":\"Dialogs_message__item__25T5V\",\"message__name\":\"Dialogs_message__name__1Tl26\",\"input__box\":\"Dialogs_input__box__xJMdK\",\"input__text\":\"Dialogs_input__text__3deg6\",\"input__btn\":\"Dialogs_input__btn__1vxef\",\"active\":\"Dialogs_active__1drEC\",\"inputForm\":\"Dialogs_inputForm__ZyFhp\"};","import React from \"react\";\r\nimport DialogsStyle from \"./../Dialogs.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={DialogItem.item}>\r\n            <NavLink\r\n                to={path}\r\n                className={DialogsStyle.item}\r\n                activeClassName={DialogsStyle.active}\r\n            >\r\n                <img alt=\"user\" className={DialogsStyle.item__img} src=\"#\" />\r\n                <span className={DialogsStyle.item__name}>{props.name}</span>\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport DialogsStyle from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    if(props.isMine) return (\r\n        <div className={DialogsStyle.message__mymsg + ' ' + DialogsStyle.message}>\r\n            <span className={DialogsStyle.message__item}>{props.text}</span>\r\n        </div>\r\n    ); else  return (\r\n        <div className={DialogsStyle.message + ' ' + DialogsStyle.message__item}>\r\n                <span className={DialogsStyle.message__name}>{props.from}</span>\r\n                <span>{props.text}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport styles from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { FormCreator } from \"../FormControls/FormControls\";\r\nimport { required, maxLenght } from \"../../utilits/validators\";\r\n\r\nconst maxLenghtValidator = maxLenght(3000);\r\nconst Textarea = FormCreator(\"textarea\");\r\n\r\nconst MessagesForm = (props) => {\r\n    return (\r\n        <form className={styles.inputForm} onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    component={Textarea}\r\n                    name={\"messageText\"}\r\n                    validate={[required, maxLenghtValidator]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst MessagesReduxForm = reduxForm({ form: \"messages\" })(MessagesForm);\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogElements = props.dialogsPage.dialogs.map((item) => (\r\n        <DialogItem name={item.name} id={item.id} key={item.id} />\r\n    ));\r\n\r\n    let messagesElements = props.dialogsPage.messages.map((item) => (\r\n        <Message\r\n            from={item.from}\r\n            isMine={item.isMine}\r\n            text={item.text}\r\n            key={item.id}\r\n        />\r\n    ));\r\n\r\n    const onSubmit = (data) => {\r\n        props.addMessage(data.messageText);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.wrapper}>\r\n            <div className={styles.dialogItems}>{dialogElements}</div>\r\n\r\n            <div className={styles.messageItems}>{messagesElements}</div>\r\n            <MessagesReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(\r\n        RedirectComponent\r\n    );\r\n    return ConnectedRedirectComponent;\r\n};\r\n","import Dialogs from \"./Dialogs\";\r\nimport { addMessage } from \"./../../redux/dialogs-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n        isAuth: state.auth.isAuth,\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        addMessage,\r\n    }),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}